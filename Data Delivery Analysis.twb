<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='data-sample-extended' inline='true' name='federated.0w183iy1tb827l18zrqqy1wn675s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-sample-extended' name='textscan.0luiu3x0etpfel13bqc7t0jyjwn6'>
            <connection class='textscan' directory='H:/Code Stuff V2/MileApp TextCase/data' filename='data-sample-extended.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0luiu3x0etpfel13bqc7t0jyjwn6' name='data-sample-extended.csv' table='[data-sample-extended#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='taskCreatedTime' ordinal='0' />
            <column datatype='string' name='taskAssignedTo' ordinal='1' />
            <column datatype='string' name='taskCompletedTime' ordinal='2' />
            <column datatype='string' name='taskStatus' ordinal='3' />
            <column datatype='string' name='flow' ordinal='4' />
            <column datatype='string' name='taskId' ordinal='5' />
            <column datatype='real' name='taskLocationDone.lon' ordinal='6' />
            <column datatype='real' name='taskLocationDone.lat' ordinal='7' />
            <column datatype='real' name='cod.amount' ordinal='8' />
            <column datatype='string' name='cod.received' ordinal='9' />
            <column datatype='string' name='UserVar.branch_dest' ordinal='10' />
            <column datatype='string' name='UserVar.taskStatusLabel' ordinal='11' />
            <column datatype='string' name='UserVar.receiver_city' ordinal='12' />
            <column datatype='string' name='UserVar.taskDetailStatusLabel' ordinal='13' />
            <column datatype='string' name='UserVar.taskDetailStatus' ordinal='14' />
            <column datatype='real' name='UserVar.weight' ordinal='15' />
            <column datatype='string' name='UserVar.branch_origin' ordinal='16' />
            <column datatype='string' name='UserVar.taskStatus' ordinal='17' />
            <column datatype='string' name='timeDiff' ordinal='18' />
            <column datatype='real' name='timeDiffMinutes' ordinal='19' />
            <column datatype='integer' name='isCOD' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0luiu3x0etpfel13bqc7t0jyjwn6' name='data-sample-extended.csv' table='[data-sample-extended#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='taskCreatedTime' ordinal='0' />
              <column datatype='string' name='taskAssignedTo' ordinal='1' />
              <column datatype='string' name='taskCompletedTime' ordinal='2' />
              <column datatype='string' name='taskStatus' ordinal='3' />
              <column datatype='string' name='flow' ordinal='4' />
              <column datatype='string' name='taskId' ordinal='5' />
              <column datatype='real' name='taskLocationDone.lon' ordinal='6' />
              <column datatype='real' name='taskLocationDone.lat' ordinal='7' />
              <column datatype='real' name='cod.amount' ordinal='8' />
              <column datatype='string' name='cod.received' ordinal='9' />
              <column datatype='string' name='UserVar.branch_dest' ordinal='10' />
              <column datatype='string' name='UserVar.taskStatusLabel' ordinal='11' />
              <column datatype='string' name='UserVar.receiver_city' ordinal='12' />
              <column datatype='string' name='UserVar.taskDetailStatusLabel' ordinal='13' />
              <column datatype='string' name='UserVar.taskDetailStatus' ordinal='14' />
              <column datatype='real' name='UserVar.weight' ordinal='15' />
              <column datatype='string' name='UserVar.branch_origin' ordinal='16' />
              <column datatype='string' name='UserVar.taskStatus' ordinal='17' />
              <column datatype='string' name='timeDiff' ordinal='18' />
              <column datatype='real' name='timeDiffMinutes' ordinal='19' />
              <column datatype='integer' name='isCOD' ordinal='20' />
            </columns>
          </relation>
          <relation connection='textscan.0luiu3x0etpfel13bqc7t0jyjwn6' name='ongoing-prediction.csv' table='[ongoing-prediction#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='taskId' ordinal='0' />
              <column datatype='real' name='taskTimePredicted' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[UserVar.branch_dest]' value='[data-sample-extended.csv].[UserVar.branch_dest]' />
          <map key='[UserVar.branch_origin]' value='[data-sample-extended.csv].[UserVar.branch_origin]' />
          <map key='[UserVar.receiver_city]' value='[data-sample-extended.csv].[UserVar.receiver_city]' />
          <map key='[UserVar.taskDetailStatusLabel]' value='[data-sample-extended.csv].[UserVar.taskDetailStatusLabel]' />
          <map key='[UserVar.taskDetailStatus]' value='[data-sample-extended.csv].[UserVar.taskDetailStatus]' />
          <map key='[UserVar.taskStatusLabel]' value='[data-sample-extended.csv].[UserVar.taskStatusLabel]' />
          <map key='[UserVar.taskStatus]' value='[data-sample-extended.csv].[UserVar.taskStatus]' />
          <map key='[UserVar.weight]' value='[data-sample-extended.csv].[UserVar.weight]' />
          <map key='[cod.amount]' value='[data-sample-extended.csv].[cod.amount]' />
          <map key='[cod.received]' value='[data-sample-extended.csv].[cod.received]' />
          <map key='[flow]' value='[data-sample-extended.csv].[flow]' />
          <map key='[isCOD]' value='[data-sample-extended.csv].[isCOD]' />
          <map key='[taskAssignedTo]' value='[data-sample-extended.csv].[taskAssignedTo]' />
          <map key='[taskCompletedTime]' value='[data-sample-extended.csv].[taskCompletedTime]' />
          <map key='[taskCreatedTime]' value='[data-sample-extended.csv].[taskCreatedTime]' />
          <map key='[taskId (ongoing-prediction.csv)]' value='[ongoing-prediction.csv].[taskId]' />
          <map key='[taskId]' value='[data-sample-extended.csv].[taskId]' />
          <map key='[taskLocationDone.lat]' value='[data-sample-extended.csv].[taskLocationDone.lat]' />
          <map key='[taskLocationDone.lon]' value='[data-sample-extended.csv].[taskLocationDone.lon]' />
          <map key='[taskStatus]' value='[data-sample-extended.csv].[taskStatus]' />
          <map key='[taskTimePredicted]' value='[ongoing-prediction.csv].[taskTimePredicted]' />
          <map key='[timeDiffMinutes]' value='[data-sample-extended.csv].[timeDiffMinutes]' />
          <map key='[timeDiff]' value='[data-sample-extended.csv].[timeDiff]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ongoing-prediction.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskCreatedTime</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taskCreatedTime]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskCreatedTime</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskAssignedTo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taskAssignedTo]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskAssignedTo</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskCompletedTime</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taskCompletedTime]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskCompletedTime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taskStatus]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskStatus</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flow</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flow]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>flow</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taskId]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskId</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskLocationDone.lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[taskLocationDone.lon]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskLocationDone.lon</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskLocationDone.lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[taskLocationDone.lat]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>taskLocationDone.lat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cod.amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cod.amount]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>cod.amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cod.received</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cod.received]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>cod.received</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.branch_dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.branch_dest]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.branch_dest</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.taskStatusLabel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.taskStatusLabel]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.taskStatusLabel</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.receiver_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.receiver_city]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.receiver_city</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.taskDetailStatusLabel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.taskDetailStatusLabel]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.taskDetailStatusLabel</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.taskDetailStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.taskDetailStatus]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.taskDetailStatus</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UserVar.weight]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.weight</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.branch_origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.branch_origin]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.branch_origin</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UserVar.taskStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UserVar.taskStatus]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>UserVar.taskStatus</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeDiff</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timeDiff]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>timeDiff</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeDiffMinutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timeDiffMinutes]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>timeDiffMinutes</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isCOD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isCOD]</local-name>
            <parent-name>[data-sample-extended.csv]</parent-name>
            <remote-alias>isCOD</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taskId (ongoing-prediction.csv)]</local-name>
            <parent-name>[ongoing-prediction.csv]</parent-name>
            <remote-alias>taskId</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ongoing-prediction.csv_99F79A6EFBDE485AA5E212CA4970DD80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taskTimePredicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[taskTimePredicted]</local-name>
            <parent-name>[ongoing-prediction.csv]</parent-name>
            <remote-alias>taskTimePredicted</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ongoing-prediction.csv_99F79A6EFBDE485AA5E212CA4970DD80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Branch Path' datatype='string' name='[Calculation_1887571260191342592]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[UserVar.branch_origin] + &quot;-&gt;&quot; +[UserVar.branch_dest]' />
      </column>
      <column datatype='integer' name='[Cod.Amount (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='5' formula='[cod.amount]' peg='0' size='127859' />
      </column>
      <column caption='Time Diff Minutes (bin)' datatype='integer' name='[Time Diff Minutes (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[timeDiffMinutes]' peg='0' size='17.1' />
      </column>
      <column caption='UserVar.branch dest' datatype='string' name='[UserVar.branch_dest]' role='dimension' type='nominal' />
      <column caption='UserVar.branch origin' datatype='string' name='[UserVar.branch_origin]' role='dimension' type='nominal' />
      <column caption='UserVar.receiver city' datatype='string' name='[UserVar.receiver_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='data-sample-extended.csv' datatype='table' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ongoing-prediction.csv' datatype='table' name='[__tableau_internal_object_id__].[ongoing-prediction.csv_99F79A6EFBDE485AA5E212CA4970DD80]' role='measure' type='quantitative' />
      <column caption='Cod.Amount' datatype='real' name='[cod.amount]' role='measure' type='quantitative' />
      <column caption='Cod.Received' datatype='string' name='[cod.received]' role='dimension' type='nominal' />
      <column caption='Flow' datatype='string' name='[flow]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Is COD' datatype='integer' name='[isCOD]' role='dimension' type='ordinal' />
      <column caption='Task Assigned To' datatype='string' name='[taskAssignedTo]' role='dimension' type='nominal' />
      <column caption='Task Completed Time' datatype='string' name='[taskCompletedTime]' role='dimension' type='nominal' />
      <column caption='Task Created Time' datatype='string' name='[taskCreatedTime]' role='dimension' type='nominal' />
      <column caption='Task Id' datatype='string' name='[taskId]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[taskLocationDone.lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[taskLocationDone.lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Task Status' datatype='string' name='[taskStatus]' role='dimension' type='nominal' />
      <column caption='Task Time Predicted' datatype='real' name='[taskTimePredicted]' role='measure' type='quantitative' />
      <column caption='Time Diff Minutes' datatype='real' name='[timeDiffMinutes]' role='measure' type='quantitative' />
      <column caption='Time Diff' datatype='string' name='[timeDiff]' role='dimension' type='nominal' />
      <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:UserVar.taskStatusLabel:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Success&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Failed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data-sample-extended.csv' id='data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977'>
            <properties context=''>
              <relation connection='textscan.0luiu3x0etpfel13bqc7t0jyjwn6' name='data-sample-extended.csv' table='[data-sample-extended#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='taskCreatedTime' ordinal='0' />
                  <column datatype='string' name='taskAssignedTo' ordinal='1' />
                  <column datatype='string' name='taskCompletedTime' ordinal='2' />
                  <column datatype='string' name='taskStatus' ordinal='3' />
                  <column datatype='string' name='flow' ordinal='4' />
                  <column datatype='string' name='taskId' ordinal='5' />
                  <column datatype='real' name='taskLocationDone.lon' ordinal='6' />
                  <column datatype='real' name='taskLocationDone.lat' ordinal='7' />
                  <column datatype='real' name='cod.amount' ordinal='8' />
                  <column datatype='string' name='cod.received' ordinal='9' />
                  <column datatype='string' name='UserVar.branch_dest' ordinal='10' />
                  <column datatype='string' name='UserVar.taskStatusLabel' ordinal='11' />
                  <column datatype='string' name='UserVar.receiver_city' ordinal='12' />
                  <column datatype='string' name='UserVar.taskDetailStatusLabel' ordinal='13' />
                  <column datatype='string' name='UserVar.taskDetailStatus' ordinal='14' />
                  <column datatype='real' name='UserVar.weight' ordinal='15' />
                  <column datatype='string' name='UserVar.branch_origin' ordinal='16' />
                  <column datatype='string' name='UserVar.taskStatus' ordinal='17' />
                  <column datatype='string' name='timeDiff' ordinal='18' />
                  <column datatype='real' name='timeDiffMinutes' ordinal='19' />
                  <column datatype='integer' name='isCOD' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ongoing-prediction.csv' id='ongoing-prediction.csv_99F79A6EFBDE485AA5E212CA4970DD80'>
            <properties context=''>
              <relation connection='textscan.0luiu3x0etpfel13bqc7t0jyjwn6' name='ongoing-prediction.csv' table='[ongoing-prediction#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='taskId' ordinal='0' />
                  <column datatype='real' name='taskTimePredicted' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[taskId]' />
              <expression op='[taskId (ongoing-prediction.csv)]' />
            </expression>
            <first-end-point object-id='data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977' />
            <second-end-point object-id='ongoing-prediction.csv_99F79A6EFBDE485AA5E212CA4970DD80' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
  </mapsources>
  <worksheets>
    <worksheet name='Task Status on the map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
            <column-instance column='[taskLocationDone.lat]' derivation='None' name='[none:taskLocationDone.lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taskLocationDone.lon]' derivation='None' name='[none:taskLocationDone.lon:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[taskLocationDone.lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[taskLocationDone.lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskLocationDone.lon:qk]' included-values='in-range'>
            <min>1.0e-06</min>
            <max>140.8064238</max>
          </filter>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskLocationDone.lon:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskLocationDone.lat:qk]' field-type='quantitative' max='7657738.7657934111' min='-4370389.5638190638' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='plus' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskLocationDone.lat:qk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskLocationDone.lon:qk]</cols>
      </table>
      <simple-id uuid='{54159C3B-D595-4752-B3DA-3EA6CE4E1A53}' />
    </worksheet>
    <worksheet name='does cod amount and weight impact the time to complete a task?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column datatype='real' name='[UserVar.weight]' role='measure' type='quantitative' />
            <column caption='Cod.Amount' datatype='real' name='[cod.amount]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Is COD' datatype='integer' name='[isCOD]' role='dimension' type='ordinal' />
            <column-instance column='[UserVar.weight]' derivation='None' name='[none:UserVar.weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cod.amount]' derivation='None' name='[none:cod.amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[isCOD]' derivation='None' name='[none:isCOD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeDiffMinutes]' derivation='None' name='[none:timeDiffMinutes:qk]' pivot='key' type='quantitative' />
            <column caption='Time Diff Minutes' datatype='real' name='[timeDiffMinutes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]'>
            <groupfilter function='level-members' level='[none:isCOD:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:cod.amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.weight:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0w183iy1tb827l18zrqqy1wn675s].[none:cod.amount:qk] + [federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.weight:qk])</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:timeDiffMinutes:qk]</cols>
      </table>
      <simple-id uuid='{F52C0F31-31AB-4FD4-A126-DB8F34616E81}' />
    </worksheet>
    <worksheet name='does time to complete task impact the task to fail?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column caption='Time Diff Minutes (bin)' datatype='integer' name='[Time Diff Minutes (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[timeDiffMinutes]' peg='0' size='17.1' />
            </column>
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='data-sample-extended.csv' datatype='integer' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='data-sample-extended.csv' datatype='table' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[Time Diff Minutes (bin)]' derivation='None' name='[none:Time Diff Minutes (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
            <column-instance column='[timeDiffMinutes]' derivation='Sum' name='[sum:timeDiffMinutes:qk]' pivot='key' type='quantitative' />
            <column caption='Time Diff Minutes' datatype='real' name='[timeDiffMinutes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[sum:timeDiffMinutes:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[sum:timeDiffMinutes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk] * [federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk])</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:Time Diff Minutes (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[Time Diff Minutes (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{88F610ED-E5FA-4D14-A95C-53071F8B8E7F}' />
    </worksheet>
    <worksheet name='how much percentage does the fail task account for the whole data?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='data-sample-extended.csv' datatype='integer' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='data-sample-extended.csv' datatype='table' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:UserVar.taskStatusLabel:nk]' />
              <groupfilter function='member' level='[none:UserVar.taskStatusLabel:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' />
              <wedge-size column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[pcto:cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1F8DFA7E-C1F7-4330-BAF2-90DCEC2859F0}' />
    </worksheet>
    <worksheet name='how much task has service cod?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <_.fcp.ObjectModelTableType.false...column caption='data-sample-extended.csv' datatype='integer' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='data-sample-extended.csv' datatype='table' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Is COD' datatype='integer' name='[isCOD]' role='dimension' type='ordinal' />
            <column-instance column='[isCOD]' derivation='None' name='[none:isCOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]' />
              <wedge-size column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[pcto:cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BDB51F2A-9A69-4F9B-B65F-381D75E97674}' />
    </worksheet>
    <worksheet name='what are the top problem for a task to fail?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column datatype='string' name='[UserVar.taskDetailStatusLabel]' role='dimension' type='nominal' />
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='data-sample-extended.csv' datatype='integer' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='data-sample-extended.csv' datatype='table' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[UserVar.taskDetailStatusLabel]' derivation='None' name='[none:UserVar.taskDetailStatusLabel:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskDetailStatusLabel:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:UserVar.taskDetailStatusLabel:nk]' />
              <groupfilter function='member' level='[none:UserVar.taskDetailStatusLabel:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]'>
            <groupfilter function='member' level='[none:UserVar.taskStatusLabel:nk]' member='&quot;Failed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskDetailStatusLabel:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskDetailStatusLabel:nk]</column>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskDetailStatusLabel:nk]' value='404' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskDetailStatusLabel:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]</cols>
      </table>
      <simple-id uuid='{451AC663-A8FB-402F-A360-74A755B632F4}' />
    </worksheet>
    <worksheet name='which branch destanation has the most fail task?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column caption='UserVar.branch dest' datatype='string' name='[UserVar.branch_dest]' role='dimension' type='nominal' />
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <column-instance column='[taskId]' derivation='Count' name='[cnt:taskId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UserVar.branch_dest]' derivation='None' name='[none:UserVar.branch_dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
            <column caption='Task Id' datatype='string' name='[taskId]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]'>
            <groupfilter function='member' level='[none:UserVar.taskStatusLabel:nk]' member='&quot;Failed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_dest:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_dest:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]</cols>
      </table>
      <simple-id uuid='{AB9F821F-6E19-46A1-9BAA-F390D84D3CE7}' />
    </worksheet>
    <worksheet name='which branch origin has the most fail task?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column caption='UserVar.branch origin' datatype='string' name='[UserVar.branch_origin]' role='dimension' type='nominal' />
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <column-instance column='[taskId]' derivation='Count' name='[cnt:taskId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UserVar.branch_origin]' derivation='None' name='[none:UserVar.branch_origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
            <column caption='Task Id' datatype='string' name='[taskId]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]'>
            <groupfilter function='member' level='[none:UserVar.taskStatusLabel:nk]' member='&quot;Failed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_origin:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_origin:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]</cols>
      </table>
      <simple-id uuid='{5B040312-300F-4084-8CBA-7DB8E6B925EA}' />
    </worksheet>
    <worksheet name='which origin branch to destination branch has the minimal and maximum time to complete the task?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column caption='Branch Path' datatype='string' name='[Calculation_1887571260191342592]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[UserVar.branch_origin] + &quot;-&gt;&quot; +[UserVar.branch_dest]' />
            </column>
            <column caption='UserVar.branch dest' datatype='string' name='[UserVar.branch_dest]' role='dimension' type='nominal' />
            <column caption='UserVar.branch origin' datatype='string' name='[UserVar.branch_origin]' role='dimension' type='nominal' />
            <column-instance column='[timeDiffMinutes]' derivation='Avg' name='[avg:timeDiffMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1887571260191342592]' derivation='None' name='[none:Calculation_1887571260191342592:nk]' pivot='key' type='nominal' />
            <column caption='Time Diff Minutes' datatype='real' name='[timeDiffMinutes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:Calculation_1887571260191342592:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:Calculation_1887571260191342592:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]</cols>
      </table>
      <simple-id uuid='{DAD393CA-B63B-4F44-93D8-7641F5F6D659}' />
    </worksheet>
    <worksheet name='which person has the most task fail and success to completed a task looked by the taskAssignTo column?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='data-sample-extended.csv' datatype='integer' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='data-sample-extended.csv' datatype='table' name='[__tableau_internal_object_id__].[data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977]' role='measure' type='quantitative' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
            <column-instance column='[taskAssignedTo]' derivation='None' name='[none:taskAssignedTo:nk]' pivot='key' type='nominal' />
            <column caption='Task Assigned To' datatype='string' name='[taskAssignedTo]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]'>
            <groupfilter function='member' level='[none:UserVar.taskStatusLabel:nk]' member='&quot;Failed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskAssignedTo:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskAssignedTo:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[__tableau_internal_object_id__].[cnt:data-sample-extended.csv_54510E2F60FF4354A5E09CFE7F0D4977:qk]</cols>
      </table>
      <simple-id uuid='{E0912683-6B58-45F1-B2A2-0A19AB020DD7}' />
    </worksheet>
    <worksheet name='which person has to shortest time to completed a task looked by the taskAssignTo column?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column-instance column='[timeDiffMinutes]' derivation='Avg' name='[avg:timeDiffMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[taskAssignedTo]' derivation='None' name='[none:taskAssignedTo:nk]' pivot='key' type='nominal' />
            <column caption='Task Assigned To' datatype='string' name='[taskAssignedTo]' role='dimension' type='nominal' />
            <column caption='Time Diff Minutes' datatype='real' name='[timeDiffMinutes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskAssignedTo:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskAssignedTo:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[avg:timeDiffMinutes:qk]</cols>
      </table>
      <simple-id uuid='{5DCD98D7-8436-4F0D-9394-205BA23A15B2}' />
    </worksheet>
    <worksheet name='which receiver city has the most fail task?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data-sample-extended' name='federated.0w183iy1tb827l18zrqqy1wn675s' />
          </datasources>
          <datasource-dependencies datasource='federated.0w183iy1tb827l18zrqqy1wn675s'>
            <column caption='UserVar.receiver city' datatype='string' name='[UserVar.receiver_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[UserVar.taskStatusLabel]' role='dimension' type='nominal' />
            <column-instance column='[taskId]' derivation='Count' name='[cnt:taskId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UserVar.receiver_city]' derivation='None' name='[none:UserVar.receiver_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[UserVar.taskStatusLabel]' derivation='None' name='[none:UserVar.taskStatusLabel:nk]' pivot='key' type='nominal' />
            <column caption='Task Id' datatype='string' name='[taskId]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]'>
            <groupfilter function='member' level='[none:UserVar.taskStatusLabel:nk]' member='&quot;Failed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.receiver_city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.receiver_city:nk]' value='236' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.receiver_city:nk]</rows>
        <cols>[federated.0w183iy1tb827l18zrqqy1wn675s].[cnt:taskId:qk]</cols>
      </table>
      <simple-id uuid='{270D9037-1D57-4A0C-B007-151E96279864}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Task Status on the map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskLocationDone.lon:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A862642B-46D2-4C13-B22D-9E85313B5844}' />
    </window>
    <window class='worksheet' name='how much percentage does the fail task account for the whole data?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{298577EA-0AD3-42FB-A264-EE2DC424AA38}' />
    </window>
    <window class='worksheet' name='how much task has service cod?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2092CA24-7E52-48DF-B764-C4838AF2018A}' />
    </window>
    <window class='worksheet' name='what are the top problem for a task to fail?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskDetailStatusLabel:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F82741EA-A248-43B9-B012-F23FEDF20478}' />
    </window>
    <window class='worksheet' name='which origin branch to destination branch has the minimal and maximum time to complete the task?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:Calculation_1887571260191342592:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_dest:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD2BD290-812B-4EB6-919A-F64374F06387}' />
    </window>
    <window class='worksheet' name='does time to complete task impact the task to fail?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:Time Diff Minutes (bin):ok]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46A41305-9103-4CB0-9AF5-A750FF872914}' />
    </window>
    <window class='worksheet' name='which person has to shortest time to completed a task looked by the taskAssignTo column?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskAssignedTo:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5952247F-A68C-4EE6-8829-2272CE822E99}' />
    </window>
    <window class='worksheet' name='which person has the most task fail and success to completed a task looked by the taskAssignTo column?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskAssignedTo:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7937825E-4DE9-41EF-84C4-CD3211B195A3}' />
    </window>
    <window class='worksheet' name='does cod amount and weight impact the time to complete a task?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:Time Diff Minutes (bin):ok]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.weight:qk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:cod.amount:qk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:isCOD:ok]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:timeDiffMinutes:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FAA5E1DD-BC7A-4953-B641-3B1EBCC7804E}' />
    </window>
    <window class='worksheet' name='which receiver city has the most fail task?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.receiver_city:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskId:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DB5F607-2E33-45AA-B60D-4E18AD269763}' />
    </window>
    <window class='worksheet' name='which branch origin has the most fail task?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_origin:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.receiver_city:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskId:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB352EA8-DFB2-475A-8D32-2E985116332B}' />
    </window>
    <window class='worksheet' name='which branch destanation has the most fail task?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_dest:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.branch_origin:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.receiver_city:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:UserVar.taskStatusLabel:nk]</field>
            <field>[federated.0w183iy1tb827l18zrqqy1wn675s].[none:taskId:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56A559E9-36EF-4239-80CE-1E9CC0A18475}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Task Status on the map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='does cod amount and weight impact the time to complete a task?' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d5AjZ3bg+UsDDxQKKO9te092k82mneE0yZkdzo7GyAy1Wkl3txexe24v
      7mJXf1zsrC7u4nZPIe3ehRRaXchTM6PRaOiHZth0zfbelfdVKAsUvEukuT9QVeyqru6uQlWj
      we78/VMAKvPlQyLfZ9733vsEwzAMTEweUmQA0wZMHlbkxReJRGLDwnRdJ5VKYbfbCzo/l8th
      sVg2pINhGAiCYMooMRkb5V59D6HQIVBgdAhVcpKMhmhvqmYkmGN7ez3xeByPx1OQgtlsFpvN
      VtC5i6iqiizLdz/wIZBhGAa6riNJ0n2Voes6AKIo3lcZq93PgqVJkkwqlcQhafSOz2OT9YIV
      W0TTtA3LMDFZDwU3L7JFwm6XqfJV4UimsDucm6kXOVVjej5BQ2UZonh/u1+TB5eCDaCypoHK
      hdduT9mmKLPYzWqazo+PXae52su5nkm+88yOTZFvYrKSwgdU94DFIZCiajisMs/sayGZyd1n
      rUweZErGADTd4HTXJJf6p7BbZdrrffz42HWe3N10v1UzeYDZmJtiE/nsyig+j51oIkvPWJBH
      t9Xz6Lb6+62WyQNOyfQAogCqpqPp99/nbPLwUDIG8PTeFlLZHNU+J9uaKu9+gonJJlAyQyBR
      FDi8s3HDC2EmJuuhZHoAMBfCTIpPSRmAiUmxKSkD2Ei8iYlJIZSUAZhDIJNiU1IGYGJSbAr2
      AqmZON3DU4iaQkdTNcMhlR3tG1u4ModAJsWmQAMw6OrqIZo1aPQ56J0IU+Zxoes6mqahqmpB
      UhVF2bAR6Lpe8PUfVBkbzfgzDGNDMhbPXYzpv18yVrufBSfEAESjUSRRIJlKY7c78Xo9G0qI
      SaVSOJ0bC6suhUSUUpFhJsQsZ7X7uaFfyOv1ApsfDm1iUixKahJseoFMik1JGYCJSbEpKQMw
      h0AmxaakDMAcApkUm5IyABOTYlNSBmAOgUyKTUkZgDkEMik2JWUAJibFpqQMwBwCmRSbkjIA
      cwhkUmxKygBMTIpNSRnARgKdTEwKoeBguGholpQmYZMFyr0uInEFf3lhUaCL3C7UVdV0BAEk
      00BMNpmCDUAQRUKzIYxUlGRlJQnNQnmZa0P5AKvFa4/Pxvj0yiiKqvH8I2201HjXLWMz9Pgy
      yzDzAVg6d+X9LNgAMuk0iqJQV1PFTCiO31+BKIpIklRwDLssy8vOHZ+N8pOPunj5yFbePTPA
      L84McnBbHU/sun290FKIwy8VGYs7opj5AHnWlA9gGAZTgUlkBMob67HeRlh1fRPV9fkHsa6x
      YJ2WcbN1Z3Mqn14e5def380f/fQU9ZUevvvMDs52BzbnYiYmrNoD5Lh09gyW8iqeb7x/xWkF
      QUA3DCRR4LEdDdRWuDl5Y5yXHuu8bzqZPHjcYgCCYKWqxo8uOSn23pE3d29WWeIbh7fQNTLH
      d57ZgdO+sc3zTExWY9UBldftpH9gmGIuSxmGQVbJod802ar0OnlmXwsWWUTTNr4HmYnJSlad
      Yfkqa/F5gkVV5HTXBAPjc9hsNr737M6lfcFGpiMcvzqGYRh8+6ntlLnM4rkmm8eqPUAmk8ZV
      Xl7U0tGDgTDff24nboeVSCKz9PnlgWm+/dQ2Du9spGesuEZp8uCzqgFksxk0JVfUIdCe9mr+
      7pfXUDUdn+eLjbYP72zkteM9nOuZZE97dRE1MnkYWLWRV5UcNruNYu7Tsq+zlq0NXhwOB7Fk
      luNXR9neXElHg5/fenFfETUxeZhYtQdIZTI4Xc6iGgCwtDXS26f6eGJXE+d6JkmklSJrYfIw
      saoBVFZWEJqdK+oQCL5YCJMlkUgig6rpSOYm2Sb3kFsMYH5ikFOXupiPpYo6CY4ls/zywggD
      E/N868ltTIXiHD3UjsNm+v9N7h23GICvoZ2nHztAhcdBMbeofvtUH49tr+N87ySqpvPknmZq
      fO4iamDyMHKLAaRj84xMTCFbrEWdA1gkkXDcHPaYFJdbDMDprcBjk0ilU0VV5FtPbmMmnDSH
      PSZFZdVJcHm5F8luv+McIDQ7xcDwGCPDw6jpKCOBuQ0pYrPK7O+sJRLPkFO/vLnBPWNB3jnV
      RzJTzAGkSaGsEg6tk8kqiLqBDtwuCtzt9pDWkqSCAQbGNSw2+4Y2yNB0g59/1sPOtmouD0zz
      3We2r1sG3N9ElFgqy5X+Kb7ySCtvn+rj176y677osVKGmRDD0rl3TYiZ67+Bs2kH9elraMDt
      BiOTkwEMi4uq+ibC0QRup2NDCTGqouJy2nlkWz0Dk5F1yzAMg/O9k8zH0nzlQBtWS+EJHIUm
      otgsOjnNIJpUsFksZkLMAqWcEHPLDjG6muX8+QtYXH4O7Fl/K7yRHWIudI8zOB3j8K5Gmqvv
      nPq4kr7xEIFgnOYqD/2BMC89XnjewEYevOlQguHpMPs7a3DYbpdOdO/1AHOHmJWsKSNMlG08
      dvhIwRfZCDtaKnh0x+3THe+E3SoTT2UJxWXs1mKuYCyntsJNbYV7w0MXk+Jw/56UVVgMhSiE
      pmovOU0nEkvxzL6WTdTqy004niaSUGhv8CFu4P4+qJRUnZGNGIAgQEe9j32dNUu5BA87sVSW
      X5weYDqc4KOLw/dbnZKkpAxgIzN8k1tJpBRqKzzs66hhPpa+3+qUJCVlAKv1AMmMQvfo3Jd6
      beB+UV/pwW6R+ODcoFlM4DaUtAGoms4/ftpNMpPj9c9775NWX26e3NPEd5/daaaS3oaSMoCV
      Q6CcqmGzSOxuqyaj3NmrMhiY580TvYTjmTseZ2JyMyVlACt7AIfNgtth5d/86YfsvUM6ZDqb
      42x3gGf2tfDe2cF7rabJA0RJG0BWUYkksvz+f/UcJ66P8+aJXoLRW4P0RFFA1XTmIkkssrnJ
      hsnaKRkDiCQyvHOqn96bKj+IooCm60yHEqiazrP7W3jvzMAt59osMt94YguhaJqXj2wpptom
      X3JKwgAMw+Av371MIJTgx8euE09lAbDIEi8f2UowmsLrsjEbTiJLq6tcUebk8K5GbDfFABmG
      wceXRnj1g6tmSRWTVSkJA8goKtOhOM/tb8EwjGUPuc/j4Mk9zbz85DZC0TT/9Klta5YbTynE
      khleObqH8z2T90J1kzWi5DQ+ODfI6a6JDUenbiYFG4CuqaiqhqIoGIaOkis89sVmkdnaVMmf
      vXWJqnIXFlmia2SOUCzFL88NcvL6OOVuO4d3Na4rWcZlt5DM5HjnVD9V5U5S2VxJ3fyHiY8u
      DbO1qYJcTqN3PHS/1VnilmjQtRKdD5JQdKbHhmlpqmUyBnu2NhOPx3G715/L++ovrxFPZpgI
      xumo97Ovs4ZjF4b5lae3Lw2BdrZW3VWOpmnLIhc13SCSyPDRxWFEQaDa5+Lpvc3rklEIpSJD
      1/UNRVAu5gJsVMbxq2M4bFZm5hPs7aim+S4bnawmAzYWLrPa/Sw4GM5msxGMhamp9jE6E6PC
      71u6WYXYVE7VcNkttNX5GJ4K8+vP7+LKwAwjU2HO905R7XPRWFWGx3n3EOObry8KIIsCdqvM
      N5/Ywo8+vL4m/TajpygFGRtNZtkMGYZh8OTuRrrH5tndXk1Tddm65W1Wz71STsE9QCIWIZnV
      qCgvQ9N0REnEYrEUnA/ws0+6ONs9gaLqvPRYJ4m0QkeDn4t9kzyxq4lPL4+QUVT2dtTy/KNt
      t5WzWsy3YRi8f3aQYDTF3o4a9nbU3FGXUtjdZTNk3BzLbxgGqWwOp82y5lY0ksjw2eUROhv9
      7GwtvCzllyofYK24y8pZHOjIm5DDns2pfPfprbxxcpCtTRW01/sAcNhkznUHGJwM83uvPMW7
      K9yghmFwtjtAOJHhKwdakVb5bQVB2FCCzJcdwzB440Qvum7gsMl8/fG1uYp/cbqfrz/eyQdn
      B2is8t6zcIqMoiKJwn1ZwykJLxDAc/tb+ZM3L7Gvs5YT18aWPt/eXMm3n97O0YPt/OL0AHar
      zFQozmK/1T8xT0ZR2dVaxbELD0fI7+hMlFc/uMo7p/rXNDTQdINMVuVXnt5OKLr2qFCbRWY6
      lCCT07DI9+ZR6R0P8dpn3fz42HViC+7vYlIyBjAQmKfK62B4Kkw6q2IYBp9dGeXVD65yZWCG
      9nofWxr9VJQ5OHl9nIm5GJAPlwjHM0yFErjst84PDMMgmVHQ9QfH+3P8yig/OLoHm0Viej5x
      1+MlUaCuws3f/fIaWxr9a77Oy09uJZ5W+PpjnXf1vg0G5nnj8x7mIsk1ywe4MTzLt57cxoEt
      tQxNhtd17mZQMgYwOhPF63YQjKbY2VZFOqsyF0nytYPtvHa8m+lQgrdP9bGtuZKmai+RRJqc
      qnGuJ0DPWJBEWuGpvU0MToYZmgxzfXiWnKrx8aUR3j8zyD9+1r0pRnBlYJpXP7jK59fGllrf
      y/35z05cH9/gZBHGZqKMTEfuKKetzsdbJ/oIBGNUep13lSsIAs/ub+U3X9jL4zvXvqOhVZY4
      tL2eCq/jjsdlFJUz3QG+cqBt3bFYR3Y38fPjPXSNBNnRUrmuczeDkkiJXNwRMhhJgQAXe6c4
      sqsJVdN551QfWxor2NZcyfB0hAu9kyiqjigK9I2HaK7xLr22WiTmoyk+ujTCC4c66B0Lks6q
      vHJ0D2983ksqk8O9Bi/SIoYBk8EYmZxGQ6WHN0/0cqF3it/7zaf44NwgSk7DZpW5PjzLbzy/
      mx8du86hbfUFV6ToHQsyODmPKAgk0wrbmlZvrY/sbiSWzOK0W0oi9klaiMWaCsWxrLJSrxsG
      6ayK22G9ZQJe63fzz17YWyxVb6EkegAlpxGOp1m8N1eHZrgxMsv3ntvJkd1NyJLI//OPZ3Da
      LDjtFjJKjucfaSOazPKzT7oYnY5gkSX+5r0rvH9uCIskUuN3k86q7F7YeMPlsOByrG+2Pjod
      4WzPJCNTYf6/ty+ys6UKm1XiT984D7D08JW5bPwff3ucockw53oK38Y1GE3R2eBnS1MFc6sE
      /S0iCAJet70kHn7I34dvPbmNaDLLt59eXklEX6j39MG5QT6+NHJ/FLwD0g9/+MMfbqZARVGw
      2dbnLRAFgY8vjZBM56up1VW66R4NEklkmQzGaa3NJ3Tv7ajh8sA0AjA0FSaayHBgax21PjfD
      U2FkSSSRzjI2GyMcz/Dyk9sod9mp9rk5uK0eQRBIZ3OksyqyJDIQmCen6bjsVm5umDRNZ2By
      noHAPA2VHpprvMyGkxy7MESNz43XbefpfS34PPmhgb/MQUZR+RcvP8Lxq2Ps7agpaAGqodLD
      xf4pQrE0XznQCqy+ADU+G+WjiyN4nNa7emZWLmJlFBVdNzjTHeDnn3bTPxGi2ufC48zL0Q2D
      ZCaHRRaXtqpNZnJYLdId3ac2i4TPY8dmkZYl3yczOYYnw3z7qe2cujFxVxf0nb4HbGwhbLXf
      pOB1gNtRyDqAbhj8d3/0CwJz8S8UE/OG0dHg58XHOvirdy+TVTR0w8Aq52+2LIl43XZGpyPE
      klncDivJTA6nTSalqFR5nVSWO3liVxNlThvdo3Nc6p/GIou4HVZeeqyT2XCSZ/a3UOt3o+k6
      mazK6a5x7FYLF/ummY0kcTksHNnVxLtnBsgoKvs7a0imc3jddr75xBbKXDbeOdVPOJHh0PZ6
      tjdXbsiHn82pYIAkskxGMqPwxvFezvdN8nuvPMU7p/v57Zf231aOYRikMwqSLGGzyIzNRPng
      3CCyJGIAsiiSzalYLRK/9eI+DMPgteM9CIDVIvHiY5288Xn+vdtp44VDHUtyz/VMEoym+OqB
      Nuw2mU+vjBKKpFA0je8/txNp4UEzDIMPzw8xPZ9gT0cN+ztrC7on92odoCR6gJn5JD/56MaS
      a3OxLLVhQCiW5mxXACWnoekGumGgajqJdI6MopJIKyTSCoYBOU1H1w0UTcfQWTAGC7pu8OGF
      IUanI9gsErORJHORFB6njZZaL4YBb53s49UPrvLmiV4Cc3GO7Gnig3NDfP+5nQxOhjnfM8m/
      feUpxmejXOybptLr5GsH23j1l9dIZXLsbq8mFE3TUFWGz5MvE3ljJMjpGxNUlDnQ9bzh3qkF
      m5iL8e6ZAT6/Nr7UO526MUE8laWizMGHF4Z5em8z47MxhibDDE9G6Gz0MzEXQ5bEZZ4aVdMZ
      norwwbkhrg/P4S9z8OfvXMLnsVPpdXJjZI75WBqbVUZY6F37J+a51DeNv8zByesTBIJxRAGq
      y128f26Q6nIXNT43VwdneO14Dw6bha6ROfZ01HDi6hi/+tVdebd0VqXcY88bmSTSVlfO3o4a
      6io8KKrG68d7uNQ/hd/jWHVeEEtm6ZsI4fc4lhkS3L4HuDI4zYfnh4gmMzRXe1c9bmUPkFXU
      0ugBLvVP8cO/+DT/ZqXeK4zitp+v8l4Q8kV3c2reeJaOE/ITN003EAWBGr+LnKqj6TqyKJLM
      5NjfWcPlgRkUVcPtsFBfWcbYTBRZEvn+czs50x0gHEvz1N5mxmajTAbj/PvffY43T/Sxp62a
      vvEggiBwYEsdv//Xn1LpdfLyka08s6+F3vEQVeVOKr2uZUOvP/rpKXQDkmmFhioP57on2b+l
      lvlYmmgySzieZsfCPOTYhWEssogsiVhkCa/Lxp72GhqrynhmXzP/+WdnmA4l+LWv7iKtqLzx
      eQ+HdjTQOxoio6j8u995lplwkrdP9uJ12QlGU+iGwchUhGA0xe72atx2KzarTM/oHL/10j56
      x0I8d6CV3/+rT7FbZSKJDO31PjxOGxklRzylEI5n2NNeTSKtUF/p4VtPbkNVNd47O4DdaqGl
      1ovNIjMZjHO6a4K2unKe2NWEAbjt+Tnen79zCX+Zg+6ROWr8bn7nG/vxumxc6ptmOpzkxUMd
      tzga/subFziyu5Grg7N899kdhONpjl0Yxu2w8s0jW5El8ZYe4K/evVwaBnCma4L/828//+KD
      QoZ5Cw/2zdvbCyIICF9svr14zE3nyLKIqulL/3NYZdKKysFt9VwemEZb6HptFpnf/cYBPro4
      TP9EKF9zUxRQVC1flEvVeP6RNq4OzrCrrZpD2+p4/UQfdX43F/qmSGUUIsksVV4nqUwOWRZ5
      YlcTqqYRjmdorvHyDx93IYiQy+m4HBYkUURRNXTdwOWw8If/6kX+lz/5gIZKDz1jITobfHSP
      BvlXv3KIP3n9/JI3Jh8zZWNiLoYg5FvNFw628/apfuoq3GQVlecPtvPG573IksiTu5voHQuh
      GTpNVWVc6p9GEASyikq1z4XPY8fncVDjc9HR4OcfP+0mksgQCMbwuR1sbaogm1MZnYlS43Mx
      MRfjO8/sYEdLFcm0wvhclK8eaONsd4CR6QiKqjMyHeHowXbeOdVPOptjNpLP9fB7HKQyOZKZ
      HLUVbvZ31lJR5sBf5qBnNO/u3tNRvWw1+/rwLH/wk5NklXwO+f/9L4/y8aURvvXkNv72/Stk
      chovPdZBKqNw7OIIsiTicVg5fnWsNAzg1I1x/q9XT3zxwVoMYJWHedn5xl1er0AQ80MujHwm
      mmEYy2zK57ETjmdorCojnsqSSCtomoEg5P/fUuOlpbac7z67g//woxOomk4smUXJaRjkcxwM
      Hew2mS2Nfi71TSNJArpuUOayIUsisVSWugoPYzNRbBaJbE5DEgVkSUTXDfZvqUUSRdLZHNeH
      Z5ElkWxOw2GTUXIaFlnKFw8wwOu2oekGT+9t5uNLI3TU++gPzNNR7yMwFyOn6Rw92MGFvkky
      2fxQMqfmjV2SRKp9TuwWmYm5fK3WsZkoWxr9TIUS2K0y0/MJGio9DAbC+Dx20oq6NIQVBYGW
      Wi8z4SStteXUVbgZnY5wbWgWQcgHJu5oqeTa0AzBaBpN++K6mpZ3cdusMqIg4C9z8C+/fYiT
      18cYnY6i6jrP7mvl6X3N/PV7V8AwCMbSXBmYxirnJ+D7Omv42sEOrg/NcH1kjv/tt57hr9+7
      wvBUmN9+aT9/8/4Vnt7XzOvHe0vDAM73TvK//9VnX3ywHgNYpeW/7fuVw6WV/7uD0YiigIGB
      oS8/VyDfwrbVlROOZ/C6bczMJ8mpGoKQb5F1w1i6tCAIXyzILXwoLnhbFq9ps0rkVH3pOFES
      eHxHA7FkltoKN/GUwkBgnlgyu7SjjsthJZbI3vLdXY58TsTid3TZLeRUHUXV8tfVjWX32+uy
      kc6q+f+LAm67FVEU2NVaRSAYYzKYoKPBRzCawjAMdrRUcerGBEd2N3G+d5KWGi//7IW9/OSj
      G1wfmsXAwOuycXBbPSeujy80CAveKUFA04zV772Qnz9YJJF9nTVcHZwllc1RX+Ghvd6HRRaZ
      jSRJZ1ViySw2i0QgGKfMaaPcbePwrkZ2t9fw1oledrdVY7VInOmawOu2MzwVYVdrFdeHZws3
      gLmpCeIKGGqW5jo/46Ec7U3VBRnA6HSE/+E/v/fFB4V6ulbrFe5VlcTVDGqlobHi/yu50/m3
      M8q19Gi3O2+1a93p+Ds8GTf3mLdtWFbjbg3WTefJCz2CcdO5sixS43MRiqWp8jqRJBGLLNJa
      W85HF4cXogQy/JsfPMnbp/o4erCDrpFZav1uLJJA12iIbxzekndUGBtYCMtoYBEN9HSM/vEQ
      hq6g6zq5XI5MJkMqlSKVSi29TqfTt309FNikfN2VN/1elggVVry+07XWo4ew4u/i67s1U6ud
      dzNrOX+ljNVk3eShWybzdvIXjpMlEbc976USBeHO92RBlqrptxynajplThs1PicWWSCj5NjX
      UY1FzPcoT+9pIJlReOdUH7XlThorHOSUHOFYmpYqF81VbrJKFgkNi6AV3gPMTo4TzwlUeBxE
      YglcHg9VFf6CeoBEWuE//N0JAqFYIaosZzNa/QJlCOSHSYsy8h6eLwSJC++XJuU3XcjAQEDI
      zykW5h8rZeSPyb9fvM4X0pcfIwgL85ibZIiikN8xZkFXMG7S4Nb3opBfo/lCxhfXkSUR3TDQ
      dB1REBacDfpyjQSwSBJN1WWMzkTQdAObRcZmkaj0OhmeCi+5JQ3DwOdxkM2pSyvc7XU+bgzP
      ksmp2CwymqbTUlu+tImiJIl895kdNNd4uTEyy2AgzMRcjN1t1RzaUc/AxDyDk2Ge3d+K3SLx
      y/OD1Pg9HN7ZsOQmLYk5wCKZTAa73b6h65dCIkqpyDA3yFjOavezJGKBFjGrQ5sUm5IygI3E
      eZiYFIIM+W4ukbh7YsVaSKUK3184k8lseGuhUqnGUAoyNmsItNGqEJs1BBIE4d5UhRAEoeBx
      +2oUKkuSJJzOuyd43IlSGHuXigxzDrCckp8DmEMgk2JTUgZgYlJsSiIlchHdMPjk8ggTszF2
      t1cXHDtuYrJWCuoB0vEIQ6MTROfnmJ4LMzM5TiSx8U3YsjmNYCTFK0f3cH1odsPyTEzuRkE9
      gGS1gR4lmkhjaCqCxUZmfo4yZyOaphXsybGIoOk6b57opaLMXpAcXdc37El60GSUQmnERV3u
      p4zV7mdBBjATGCOTs+C0aGQ1EdJh7GWViKKIJEkFey4kSeL7z+0ikVbwOG/NFFoLpeB9KRUZ
      hmHk8xZMLxCwiaURm9rXXqN/PQhCPl7F3NHQpFiYXiCTh5qSMgBz8wqTYlNSBmAuhJkUm5Iy
      ABOTYlNSBmAOgUyKTUkZwEZcXCYmhVBST5zZA5gUG9MATB5qSsoAzCGQSbEpqSfO7AFMio1p
      ACYPNSVlAOYQyKTYlNQTZ/YAJsXGNACTh5qSMgBzCGRSbArKB9A1lWxOA00hnTOwSSDbXdgK
      3B50EbMHMCk2BRlAJp0kGEmRiQUpq6xlPhZBkm20NDei63rBaWuapm24POJiBpMp44vzNxJl
      u5gOudFUxI2yGTJW+x4FjTkEQSAWieL2epmcnELT1Hxt4w1W7tpoJTWT5Wz09yg1Pe7Fdyks
      KV620tRUj91uxV9Zi2BoSBbb0hfdyFh+o/OAQvbnfVBlLOYEb1TGRvXYjHzeRTaqx8rzCzIA
      q82O1baxMuarYc4BTIpNSbldTC+QSbEpqcpwhmEsbaSczal89UAbDVVl91stkweYkmpyDcOg
      fyJEZ4Of7z27k1M3Ju63SiYPOCXVA4iiSGWZkzdO9NI3HmJvR839VsnkAecWAzAMnZ4b3ciC
      RPOu7RSzRFXvWJCeiSgWWeKpvc00msMfk3vMKkMgncnRIXpGAxTbK98zFuTFxzo4squRyWC8
      yFc3eRi5pQdQUmmSOZXq2vKiK/Ps/lZ+caofq0XiW0/em/KLJiY3c4sByFYbrU31DI0HCEy1
      0FJXWTRlvC4bPzi6p2jXMzG5ZQgkWazIkoRVsjI/P1c0RcLxNOd6p0hnc0W7ponJLQZgGFl0
      XcLpKWP3zu1FUSKnarx1so/KMgevHe8pyjVNTGCVIZAg2DCMKLMTKVRBwFIEJQwDRFGgwutA
      08zNsk2Kx6rrAA67G1uFwOZH+6yO1SLx1O5mjl8Z56XHO4t0VROT2xiAroGSjJMDrEVSpLWu
      nFqfHbu9WGZnYnKbUAiHy4WhqRQ7NtOMBjUpNqv2AA1t23iprIpip1IUwwB03eDywDQ+j53W
      Wh8lkC9ich9Z1QBuXDiN7qxid9XqawCJ2DxzkQxCLk5aFUFNY/dU0tZcX7Ai4XiaK/3TPLaz
      Caf93k29P7k8gs9t58rADBZZMsMtHnJWNQBfhY/LXWPs3LVl1XAId1k58eQcOew4RRWcftBz
      6Lpe0DapqpbfGvXglmp+/lkXv/7VXYV8F+DuW4umMgpttV7mojLpjLLqsaW0xam5TermyVjz
      NqnxdJrozCy3u1QsHCIai1NX40PRZVAS2MtqC94mVTc0JFHEX+bAMNjQ1qB321r0hUOdfHJ5
      BH+Zk87GilXzTEthi9PNkGFuk7qc1e6nYKww7UR4jqvd/bg8fnbv2b7ugLh4PI7H41m3cqPT
      ES70Bnh6XyuBYByn3cKWhop1j9FL4cErFRmb8fA+6AZwy90VRTFf9SEcRoeiRd0qNfMAABed
      SURBVIS21JZT7bVxYWCOeEpBVTVEQaCzwb8uOVcHZxiYjPDUnmbqK9dviCYPF7eYk93jwynp
      ePz+oqeLGYZBz2iQsZkIV4dm1x0XlEwrDE5F+adPbuOji8P3SEuTB4lbnnFRFKmqriCdyBR9
      HUAURSyySEeDH1kS1+2hsVokUmmFywMz99STZPLgsGojH4mGuHGpG63IyhiGwVN7mpkOJXhs
      Rz3l7vWtCltkiV95ZhvlHruZT2CyJladYVkdlfh9gWLrgmEYdDT46VjnuP9mnDYL25oqNlEr
      kweZW3qAdGyewb5uLP66okSCLlPGrAtkUmRueeJkm4N9Bw/jNrIoRVbm2tAsf/7OJU7dGEfb
      hGKoJiZ34xYDUJUMU1NTNGzZWtSKEFcGpvnRsS4sksinl0f56ILpxTG599wyB3B4fBw44Cuq
      EhlF5frwHFXlTs73TtLR4MvvP2Bico8piUG3LIlous7BrbW01JazvbmSFw513G+1TB4CSsYA
      vvnEVj64MMJcJElHgx/rwm4z2ZzKj49d52/ev8L4bPQ+a1pcEmmFeCp7v9V4oCkJAwD47Moo
      h3fU4/c4+OOfn+VC7xQAfeMh/B47OVXnz9+59NBUjRibifLO6QHeOtnH6HTkfqvzwFISBqDp
      OhNzMf7+424mQ3FeObqX4ekwAB31fj6/Ng7Aoe31XBuavZ+qFo2+8RDP7W/hq4+00Tseut/q
      PLCURHFcJacRiqU5vKOO/skIveMhXnosPweIpbLUV3qYj6WQRIGn97ZsyjXHZ6N8fGkEiyTy
      nWd3YLOUxK1Y4qm9zbz2WTeCKPDtp4pTnuZhpGR+dVkSqfS5mQqnsFmkpTnA6RsT/ObRPQSC
      cSKJDGWuzXHOnukK8P3ndtI3HqJvPMSe9tKqRG23ynz/uR0bDqk2uTMbGgIFpwOMT84wOT5C
      KJooXAlRQFE1zvVMsq+zlq8dbOfD80MA7N9Sy+vHeznbHWBnS9VG1F3Gvs4a/vGzbq4MztBR
      X3johcmXm1sSYtbDUF8PstOTz6rSNRoaGojFYrjd7nXJ6R4N8u6ZQRornVwZCvH8o604rDJP
      7GoE8imToiAginfPjlnPhm6qpiOKAuKKrJtS2OCulGQsZpZt5HzY2C6PmyFj0zbJW8TtcROK
      p5H1LPayqoJTIjsaKpgMXUZRNWRJ5FzPFC01Xh7dZuC0W1DUHL84M4DTbuHowXakm76Erhsc
      uzBELJXlpcc6sVnENV//dofd72yubE4jnspS7rKaKZGbKGNNGWHrobqukeq6jUjIEwjGAJgJ
      J4gmsvzxv/4GM/NJrg7OcHhXI8cuDrO9uZJsTuXa0Cz7O2uXzu0em6PcbefRbfV8eGGYf3L4
      y7uANj4bZXgqwkBgnlq/G6dN5rkDbfdbrQeaknCDel125iJJpkL5ecRrx3s4eX2cna1VaLrO
      8GSYv3n/Cq991kN1uWvZuZVeJ/2Bec71BKj1u5mNJPn08gipL9l6QSyZ5fjVMbwuG4Zh8NJj
      nYzPxu63Wg88JWEADptMmcvOI1vr8Dht/Mbzu3nlhT2UuWxkFY36Sg///Xceo77SQ13F8jzf
      6nI3Lz3eya62avZ11vDhhRHa6ny88Xnv0jEz8wk+vTxyXxfRlJzGXCR52/Iimq5jkUTqKjzM
      zCf50YfX+MqB1qX/x1JZYuaq8KZTEgZgs8iIgsBQYJ5wPM3PP+teGuc7bDI2q8x//PFJVE1H
      N5aHSQsC+D0OGqvKMAwDSRRwOSxLY8aMovLB+aFbjKKYKDmNH314jfO9k3x8aWTVY3weB3s7
      arjQN8W//tXD/OYLe6n153u7kekIP/rlNX74F58wPBUuouYPPiVhAFaLxP/8a0/gL3Py73/3
      OW6MzKGoGiNTESbmYnx2ZZR//tI+RqYiXOqfZiacWGpJw/E0yUw+c8Fhs/DEzgbOdAX45pGt
      QD6koHtkjrHZKJp+Z4eXYRjMzCfuetx6iSQz1PrdvHio8457n21rruTrj3fisC1PReqfCKFq
      Or/14j7+8t3Lm6rbw86G3KCrUWhdICWn8e/+8hPqK9xcHpjGIkuksyo+j51QLE2tz00olqK1
      rpzDOxvJ5jRaarwMBOZJphW+fngLlV7nLTP9Vz+4ypHdTfz9R9f53W8coMZ/exftqx9cpWcs
      SGttOb/zjf3LvE3r/S7zsSQ1/ryL2DAMPro4zFQowXMHWtec7L/4XbKKyu//9We01HgxMPhv
      v3VwTeebdYGWs+leoM3CMAzeOztAMJJkfDZKmdNGmctGLBllPpbGZpEYmYnw6NY6ypw2jh5s
      59VfXkPXdb72aDujMxEmZmNUep1A3r9/tjvA6EyU+XiaqVCchsoyKsqct9Uhlc3RNxHiv3n5
      Ef745+dQchoO2/pv9uJwp7rcidUa5GuPtiMIAs8/2l7w/bFZZf7H7z3O2e4Aj+9suO1xNxta
      c42Xp/c2F3zNh4WSGAKlsypvfN6zFI+TzOQYm8nvF5xRVDKKSpnTRkWZg0Awzh/+9DSP72ig
      qtzF//T/vsdPP+6ioyGfxKPpBn/xi0scvzKK0ybjdliRRJHvf2Unsnz7r2voBrIk8vrxXuor
      Pditd28b4qksH10cJhRLLX0WS2Wp8bk4erCd6VDhq+Mrqfa5+OaRrVSt8ILdjG4YzIaTvHJ0
      D2Mz9zZ0PJtT+dGH1/ib968w8iWOVi2JHgAglVEJRdMYwJbGfF0gr9vO+Z5J4imFrEVD0w2C
      0RTbmiv42w+uMjIV4ZWjexgIzPPZlTE0Xae63InPbcdmkbk2NEsmq9I1Msfxa2PYrTIvHOpg
      Mhijrc7H8FSYXW3VVJe7iKWyNFd78bpsuB0WfvLRDZ7d17JUXc4w8iHb14dn+M4zO6ir8PD6
      57189UArb5/s55Wje5AlkYoyBzarzI8/us5XDhTe6heCKAh43Xb+/qMb1PiXG8p8LM3lgWkO
      bq+nzLnxeKr+iXl2tFSxo6WSt0720XofttXdDEqiBwjF0qSVHIuzEafNgqYb9I4G0XQdt8OK
      ouQjRpNphdeP93B9oXLc3314jeGpCD85dp1PLo3whz89zemuAFOhODlNZ3g6gpLTOHltjN6x
      IH/w45NsaazgT984j8Nq4Z2TfUQTGY5dGOb5R9uYi6RIZlS+9+yOZdXlesbm+OzKKOmsyn/6
      hzMoqoZhGDhslmX1SwVB4KuPtPGD53fTVL15pde7R+f42/ev8Pcf3UC/zbRNEAS+/ngn33t2
      J1+7acil6Tpvnexle3Mlr9+0CWFGUfn5Z928dbIPdZ17s3XU+7g+NMM/fNLF/s7SCiRcDyVh
      ADPzCW72bnaPBpmPpXHYLRgGJFIKLLg7c5qObhgY5Et2x1NZsjkVWRaZCiWQRIF4KksgGOel
      xzroaPAxFUqgG3l3qyQJOKzy0o9/8sYEyUwOQRA40xWgeyzI4OQ8p25M4L2pMJemGQwE5rHI
      IrPhJEOBMF9/vJM/+PuTtNf5Cp4wr5ULvVP85gt7qfa57uhJEgQBWRZXjZmx2+Rl6xCfXh7h
      0a11ROJpPr82ti59HDYLrxzdyw+e382Wxi9vHSbphz/84Q83U6CiKNhs6+tiM4rK+2cHl95r
      hoFuGEQSmS8OEmAgMI+q6QiAQX5YYrPKxJJZLLJEPKWwraWSZDrHvs4a/uHjLqZCiaXWLZxI
      s6Olih99eJ2cqhFLZUlncyQzORoqPXx8aYRfeXoHn1we5ak9zexuqyKWzGK3ydT4XQwEwpzt
      CWC1SDy9t4VrQ7M8/0gbA5NhhqbCVJQ5lkoy3hx4deLaGCeuj1Pjc+FyrH3XtZtlGIbBsYsj
      jM9GGQyEee14D8FIku3NlXcMEjQMA0mSqPW7Odsd4KuPtuG0Wbg6OMOVwRnePtlPNJnldFeA
      I7tX35zEMIxVvS/CHQIUkxmFNz/vZXQmQnudD0EQSjIYriQMIJ5SePf0wLLP1NvVBVp8+hf+
      qnq+R8hk8xsfzIaTJLM5hibDS8OUxTZPEPL/lwSBWEpBEgVq/G4GAvNkcxrJtILDJnNjZBZV
      0/nJseu8dryHC71T7O2o4erQDAJ5g02kFfrGg1hkiQu9k9T43Hx6aYQ97dXYLPLSzQ5GUwwG
      5jl6sJ0/e+sC9ZUeyt2OW8q+TwbjnOkOIIkC53sn8Zc5sMoioigSSWQYmJjn6X3NJDM5gtEU
      Finf4/WOBbFb8/OdCq9jafJuGAYX+6aYjaSo9bvpGw9R7nFQX+nh86tjnOkOcHhnI1cHZ3hu
      fyvlbjvdY0FaarycujFBVblzySmRf/gEzvVMEk5kFibiBu+dGeBMV4BkRsFmlTl9I8DQVJih
      yTBXBqZ5/pE2dAN++nEXA4F5Mjmt4B15dN2ge2yOSCKLv8xZ0NZWJWsAPWNBjl9d0QUvfsE7
      rVKsvAkCS4ZxyzB54XPdMJBlEd0wyOY0Upkcmq4zH0szF03RNx4ip+pMBuOkszlUzSCjqIzN
      RBmfjZLM5FBUjW8e2UrPWIhIIsNcJIUsCcyEU4TjGS70TjEfT+N12TnTFaBvfJ6ff9ZDpdfB
      Wyf7CMVSyJJItS8/Uf3syig//eQGyUyOn33aTZ3fzS9O9/PkniZmwileP95DMJrmvTMDVJU7
      OXZhGFXTGZ2O8t3ndvIXv7jM0YMdfHh+aClQ8Gx3AN0wSKSz/PL8MLU+N/GUwk8/vkFTtZfj
      V8c43ztJKqNwdWgGw8jnSFzsm+bxnQ28e7qffQuyDMPg5I1xHDaZyWCcZDqH12WnZyzIr35l
      Fx+eH2JoMkzvWJB3TvZxfXiO2UgKu1VmeCqCz2Pn15/fzaeXR9nbcfv5gmEYzIST2K3yLT3L
      QGCe8dkYM/MJnHYLXtf6dxPd9HDozeKWlVdhxWtjxWcr369k5TkGy3qNVCa39F5R8/WHsoq2
      cGhel8XPIV+doXc8SDKdW2p53j7Zz1wkyeM7G+keneNC3xSGAR0NPnrGgnx4YYgPzg7yX7/8
      KD/9+AZZReVfvPwIlwdm8HkcvH68hy2Nfs50Bfj86hgTszGGAmESGYX3zw7SWF3Gv/0vH1FX
      4WZwMsxvv7Sf41dHmYskSWVzVIsuavwuRqcjGIaBVRYZn43xZ29ewO20MjOfpLPBR0WZnalQ
      gsM7ZTTdIJVVGZuNUl/p4VL/NDZZ4sXHOnh6XwsWWeRi3xQX+6YYm41xbWiG3W3VAKiaQU7V
      ef/sIJqm88oLe5mLJPmzty7SWlvO9HycsZkobqeNxqr8AuAjW+uxWSU+vTTCj49dp7VudU9R
      Mq2QzWmcuJ731E3PJ/mN53cjS/mHNRRNMTYTJZLI4HZYN3WlviRWgk9cG+c//ujETVqtctDd
      Hvq7sdIgVuthVhrZSoQv/hgsfy2JArphIAoCTruFhkoP0/NJHt1Wx+dXx3DaLUTiGawWCY/T
      RoXXgabp+DwO+sZDJDM5VFXHaZcRBIGmai/DU2F+8LU99E/Mc7prAk3Tl+YQyYxCrd/Noe31
      DATCBOZixNMK5S4bupEvINAzFmQmnEQUBLY0+jmwpY6ukTku9U+hGwYCAqIIdX4PT+1t5mef
      dJFTdQQBXA4rW5sqqCp3omo6qUyOKwMz7Ous4dl9LbxxoheLLOF2WIgms6QyOSbmYuTU/ND1
      O8/s4GuP5hP6m2u8DAXm0cmvZxzorAMMJuZi3Bie42efdqHkNLxuO//rrx/hXM8kLz3WQWxh
      neXGyByReIZKr5MtjX5+8LU9vHd2gFQmx3MHWu+4NnIzK1eCdcPYHAOIhOawustx2iwbN4Ci
      7826zmve1JMsY6VBreiFFnsOY0VvdMu5q72+w7UlKW94S3Jhddnk1wn0xdZz5XdY5RxBuFVf
      QchPRG/nil2UISwMRy2yBAbkNA1Dz3/usFmwyCKxZPYLFRausZidJ0l5XTXdyF+T/Ht/mR1B
      ENjWXMnQZJisorK7vZorAzOklRxlLhsHttThddm4NpSfyzVVlfHo9nou9AS4MRKkosxBe72P
      gcD8xg3A0DVGxsYBgZbmJqLRKE6nc1nsxsrXix6BxdenugL8p384t/zH+LJyN4Na5cFc9bO7
      nXsnA7mTLmsxvtu9X03H2zUEC0iikB+yLBiPAYgCLPNxrOV+AYKYL54gCXmZzz/axsBEiJGZ
      GOpCz7NoRJ0NPvweO5puIEsCkaSCoevsaqvi82sTvHionTdP9G3COoAA6UQMQ5CW0u+sVit2
      ux273b7qa5vNtux1R0MltjWEHpjchbUa0FqOvZOMuzWZN/1fu6nHWWxq7zqEX82oBDB0yKk6
      BtBQVcbFvmlymsHjOxqWeYWkBQdDKqvSNRokFMvQWltOOJHl0yvj2K0yM5EUbfW+zRkC6bqG
      IOQXXwoZAhlGPh1ydCqE1bqxZXpd1xDFtUcuLmtMF34kXdeQROlO0wBkWbyl1an1u5kNJxGE
      fKyMvBBBKUsigpD/8RaHIOLCnKHS66TS66R3LJjXf6GltFkkcqoGC11/e72PeDpLKJqmra6c
      jKIyGYovPVSSKCzonpepGXnPFoaBLEtouoHdKpPN5V3DTpuFjKIiCgLlHjvBaCr/nC349o2F
      YZUoClR5HYQTWTRdR8nl5whWWcIiiyQzOer8bkKxNIqqIYn5OZDP4yAcS5PK5nDZLXicNiaD
      8fyC4cL3S2byq/83d0iLcym3w0pDpYeR6QiiIJDO5hcrrRaJ+koPboeVwUCYGr+LMqeNqVBi
      yT2ddyFLeJxW5iIpGio9iKLAxGwUr9uB22HN/+ZCiUyCF8lms+t2oa7kfie0l5IMMxx6Oavd
      z5IIhVhE08yS6CbFpaQMwMSk2MiQ7+YSic2JXU+lUnc/6DZomrbhXqBUikmVgoz8OH71OJ4v
      m4ybvYcbkbHqSrAgCAWP21ejUFml8NA8SDI26+GF+1/VrSQrw202m7FLpCnjCzbaYi7K2Cil
      ImO1+1kyBjA+MkAokWPf7h0Fuahnx4aYz0nIeoqsLrNr25Z1nZ9OxJiYDWPRM8RzAhYtheyq
      oLOtac0yUvEok6EogpLE6vYTD01i81TR0dq4Zhmx+Tn6Ricpd1pQBBtGOoLTV0dbc/2aZURC
      swyMz1BmE3CVVzM/O46nopHWxrUnrszPTTM4PoPXLqJLdpRMjPKqZprr116gODQzyfBUCJes
      U+6vZnZuioqaVhpr116MOBGZo3dsFoegkpPdqJkEO3buwmlb+6MbGLpOChfh+QR1VR5m56Ps
      3rMHmyyWziTYECx4XY67rrHcDtnuIBkOosvOdd2cRRzuMtwOK4LFjttuwe4uR2J98xGnx4vL
      ZsFutxMMBnF5fIjGOuc0gkBraysWuwuHRcTtrQBtnQW9BIG21hbsdjtzc3N4fZWgrW/TW4tF
      xmqzYnOWYRE0yiuqMNT16SFbLNgWFjxnZ2bwV1Wj5danx/jEJNlUAqfHhyhCTZV/Xdlrhpph
      ei5MJJLCaVWYCSWo9pcvhduXTA9QW11BOJkr2CJdbjc19Y343Fayxvq3+E7G5onFk9TVVKDo
      EpKWxuJa326Z8UiIWDxFVUUZjW4/kpbGXra+bCld1wlFwjRUlpETbGjpKC7f+lIODU0jFAlT
      VebG7a9FS8fwVKxPhq4bVFVW4bIYCLYaMrEQ3trau5+4TIZOZWUVFiODv7aZTHwef331umTs
      2L2PdCZDOh6lsrqKaCSKx7H231eQ7Tx66AnSWZXZmRm2NdQyG4zgXNh/oqQWwkxMik3JDIFM
      TO4HpgGYPNSUzBzA5OEhHQ/zs5+/xcHHD+EpKycVj2F3l0M2RkV9K2c+/xAlZ9Dcvp3B66dJ
      5AzqOg6QiwzQXF3J4IzO9m2tZDMp6urqkESdU59+xv5Dj5PMqli0FO7KRsrdd0+bNOcAJveF
      0ydOUe7UGQiD16IiKEmGJ8M8+sSzhIPjeEWN0ZCK22ujwgUNWw5x+tg7iE4HckYlrumUl5cT
      00WqnDJ6LosSj6LZ/diIU9W8h+3td3cdmwZgcl+IRqPIImRUWKxYGZ6bpqy6CTUxR0K1UOV1
      oQEWCayOMlKJedRcPu1UNcBqkcmkEiRVkTKLhiZaCEdTWIw0lQ0deNewo6hpACYPNf8/UT1a
      iK37lAIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='does time to complete task impact the task to fail?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='how much percentage does the fail task account for the whole data?' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALfklEQVR4nO3da2xb5QHG8ec9x7Edx4lzobknTZOy3tK1DNqS0q4dbDCpbOsQYkLsIk1M
      oGmXb0PatEnTxKRJY2IbQmxjYkMCJkTUtWNjXQdldG1XKKWXJG0uTVJCm3vsOo6T2D7n3YeU
      qhUtzf213/f5SfmSOvajtn8dX2IfIaWUIDKUpXoAkUoMgIzGAMhoDICMxgDIaAyAjMYAyGgM
      gIzGAMhoDICMxgDIaAyAjMYAyGgMgIzGAMhoDICMxgDIaAyAjMYAyGgMgIzGAMhoDICMxgDI
      aAyAjMYAyGgMgIzGAMhoDICMxgDIaAyAjMYAyGgMgIzGAMhoDICMxgDIaAyAjMYAyGgMgIzG
      AMhoDICMxgDIaAyAjMYAyGgMgIzGAMhoDICMxgDIaAyAjOZRPYDMIKWEIx0kUwkk3CQmUxOY
      TE5gYjKOiqiFrEAOhN8/9WXbEF4vhG0v+C4GQPNOSomxRAwdQ234IPw+LkTPo3+0D0NjA4iM
      h5F0kpcv608Cj+3PRnZKXP6e8PlgFxbAU1qKrNJSeMrK4K2pQVZ1FYTPByHEtW52VhgAzZmU
      EuPJcbQNnkZLXxPO9DfjXLjrqv/oM7q+yUmkevuQ6u3DxBXft3Jy4K2rg2/1KvjXrIF32TII
      z9yOEkJKKed0DWSspJNE+2ArDncfwNvnDmN0Mjrj67jWEWC6PBXlCGzahMDtm5BVWQlhzfwh
      LQOgGZFSIjIexutte3Ggcz8GYwNzur65BHCZEPAuX47g9m0IbLkDls83/R9lADQdUkoMx4fw
      j5bd+E/H6xhPjs/L9c5LAFfwFBcj994dyNm6BVZ29g0vzwDohsLxEexpasSbHf/GZGpyXq97
      vgP4kBUKIe/eHQjeczcsr/e6l2MAdF0pN4X97fuw6+TLiIyHF+Q2FiqAD2VVVSH/61+Fv77+
      ms8eMQD6CCkluobP4rkjv8PZ4fYFva2FDgAAIAQCDQ3If+hBeIqKrvojPg1KV0m5KbzW8je8
      cuLFWT+NmXakRPzQIUy0NKPo0UfgX7fu8tGARwC6LBwfwbOHn8Z7548u2m0uyhHgSpaFvC99
      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
    </thumbnail>
    <thumbnail height='192' name='how much task has service cod?' width='192'>
      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
      bviXMABaMcd10X1qEgdb+nCk6wwuLFiezlMezcXuO2rwwI56VJfmL2vDv4QB0KqJCOYWLHzY
      O4J32wbR1ncWpuWsyboLckPYtbESe7bU4vb60lVfDpIBUFKICGbnTfSePoeO/jHE+sfQPzIN
      005OEJFwEE3VUWxqKMPm+jLUVhQiO3jzJ/MxAEqJS3uHkclZjEzO4Mx4HMOTsxifnsPcggXL
      cpCwHCQsGwIgHMxCKJiFUMCPnOwAKosjqCyJYF00D1Wl+SgrykUo4F/Ry5vlYAC05kQEritw
      ReC4Fzc/v8+Az2fAZxhJ38ivhwGQ1vh9ANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDS
      GgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0x
      ANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMg
      rTEA0hoDIK0xANIaAyCtMQDS2v8BAHwhBndPRy8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='what are the top problem for a task to fail?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='which branch destanation has the most fail task?' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAc3klEQVR4nO2d2XMd153fP923777vFxf3YiXAVSEl0pJsSfbYluOasTQZO04lrsrmh7zE
      M5VK5SGpJA/5F5KHVE3ieDLxzGRqaiqVGsdjj6TxWDJljU1rATcRJEEQIHbcfd+6Ow80Zcki
      KaAX4AI4n0cU+e3fBe6vT3/6dJ8j6bquIxAcUeT9LkAg2E9EAwiONKIBBEca0QCCI41oAMGR
      xpYG0HUdq24uHeacYazpqOUolhzhIdy8V6DT10znaKqK7HAcuhxd05AkCSRpaGo6ijmGG0DT
      Oty4tkAsniCWTbOxvMxoOspqsUt+JM7v/8XbLKxVDBctEOwFhhtA13s0m330/ibBbJp2ZZvb
      3QEOl8vK+gQCWzHcAJKkcOz4CVxqlbt3lshk85TKNQIet5X1CQS2ItnxKISu67x6aYFKs2s6
      S9M0ZNm8qw9bjq7pIHHfA4akpqOYY5sEj6XDpPqq6RxN1ZAdFvwShizH0gYYss92kHKMN4Cu
      cevmDQLRBGpPxR/woMgK/cGAaDTCf/uekGDB8GOiAXQazSYoThqlBq1EhOrqMtNPfsbC8gQC
      ezHeAJLE2OQxomE/lUiD1Y1Npk6colMrgy9pYYkCgX3YJsGv/WKBSsMCCdZ1ZCuuk4csR9d1
      kCTMJw3fZztIObZJcC4VIhGxQIIP0B2F3XBfgiUrJoKH7rMdpBwTE2E6dxduEYhF2V7dZmQ8
      T3FjlVg6RzTk579/7x0hwYKhx0R76fT7vfszwo0u28sLuCMput2eddUJBDZjogEkFEWh19cY
      zWeJZbLUtjfQNPMPwAkEe4VtEvzXb9+xSII1ZMmC68Ahy7kvwWCFBg/bZztIObZJcDYRJBby
      mc45SEK1G3RdA6ShfBTi3LEMsmy8rsFggKKY/2rtRY6J9PsS7PCG0bt1XIEoPreT/mBALBrl
      2/9PSPBB5c/+09e5dfMG+XyeK1eukEgkWF1d5cKFC4TD4f0uz1JMnTaajSb1WgEdF51uh/nL
      7yK5g1bVJthHRkZGaLVa5HI5AoEA6XR6v0uyBVPjy0h+gmg0zO35GyiOEFMnTtGti5ngw8DC
      wgKDwYCNjQ0mJiZYXV0ll8vtd1mWY5sE/+jtO1Sa5m+JDtu1+1FwgL/3/HEUE09hHhEHeDwj
      8SCR4MB0zrB9cS3L0XUkzD0OffZYBsUhD90X7iBhSoJrtTr9fp9auYAnFKddLRKMZ0hEQ3z7
      +0KC7ea7//GrLMxfx+12UywWyefzTExM7HdZBwpTM8E3r7yLJuu4/Bl67QbNRtO6ygQ7otFo
      8P7771MoFCiVSvtdzoHDxAggMXniNN1On0ZlE08whtst3gfea+LxOB6Ph0qlgkssSLBrbJPg
      v3lnUbwT/Bj0XzqAmcdBX/r0LC6nY+gc4CDl2GY86ZifkN9jOkfVVByy+cWRhi1H0zWkHdwF
      8rgVzkymTB9P8HAMN0C1tM3GZoF0Nsv62hq5sTHWlpdJjOSJhf38j++/KyTYAvKpEP/5977M
      xYsXmZycZGtriwsXLux3WYcGw2N5s9lE7Xe4t1nmxPEZFq9eITNzgma1aGV9AkBVVXq9Hnfu
      3MHr9e53OYcKww3gdruRXS4SQS/v37hF9tg0K/Pv4/KFrKxPADidTnw+HyMjI8zPz1MsipOM
      Vdgnwe8uUrVgJljXNCRLXkEcspwdSnDI5+KL56ce+28OknQOW45tEpyK+Al6zd8WVTUNhwVf
      uGHLcTllnphKW3JHSWAcww2wsbpEX/Kg9jpkYkG2211qmyVGJiaIBn185y+FBD+OTMzPf/3X
      v8Ubb7xBJpPh7t27PPfcc/j9/v0u7Uhh+PQzGAzQdI16qcDydpV+u0wyM069XLCyvkONpmkU
      i0WuX7/OyZMnWV1d3e+SjhyGG0BxKAwGA7JjeRyShN8bYGP1Lt5AxMr6DjW6rhMMBslms1y+
      fJlUStzv32tsk+Afv3uXWkvMBD8Kr1vhxfNTlmQdJOkcthzbJDgR9uLzmn825SBtt7MTnjyW
      weV0iNUzhgTjC2NpfW5cnyeWSVJYKxCJBFGCEZxoRCNh/uAH7wkJfgjf+Xe/zcr1WxSLRVwu
      F4FAgHPnzu13WUcWEyvDDWg223haNdqtPpJaRR/08StuopHD9eK01czOznL79m1isZi4DbrP
      mFgd2oHH48bp9HDsRB6X1qLvgq1ix8LyDieFQoGZmRlWVlaYnp7e73KONLZJ8Ovv3aXWEu8E
      /zpfujCF1+38wAGEBO9vjm0SHAt58bidpnMO0nY7HyYV8TOVjZo+nsBezDWArlGt1ej122yt
      lRgZH0ORIRgI8D+PuAS/eH6Kf/ricd566y3Gx8cBOHny5D5XJfh1zJ0SdZ2r772LO+C9Pwtc
      2qbZaltU2sEnHA6TzWY5duyYuO05pJhrAEnixJnTNCt1Nlfv4g1G8Yj3gj9A13UCgQClUomb
      N2/S7ZqfGBRYi20S/MbcXWpWLIx1gLbb+TBj6TBnj2UenSMkeChybJPgSMCDy2k+flju3uw0
      x+NSeHJmxPRxBHuDiZlgjaXlewS9EpIvjUPvgA79gUo8FuUPfzh3JCU4HfPz+//mJX72s5+R
      SCRYWlrimWeeIRAI7Hdpgodg+JSo6zrFYoFatUSzNaDZbHLzynvIHvGH7vV63L17l0KhQKfT
      YXFxcb9LEjwCww0gSRL5TAzZG0PtVOirMH3yDL1G1cr6DiQul4tcLofH48Htdn9wG1QwfNgm
      wT+ZWzqSM8E+j5MvPDW5oxwQErzfObZJcMjvRlEsePx4SBrA7XRw/nj2SK6gfJgx9ZdcWriJ
      7g7i1Dq0BjJOevjCSZKxMP/rrw6XBCfDPr79b3+bixcvksvlWFxc5KmnniIej+93aQITmDq1
      un1BJLVHs9Wi02mjqSqaZvkV1dCg6zqNRoNyuUylUqHRaOx3SQKTmGqAVqPCAAfJdJYnTh7H
      4XCgquY3xRhWdF0nEomg6zqhUEhcCh0CbJPgi5eXqLX6prOGxQG8boUvPDVpmQMICR6OHNtO
      YQGvayi+uEZyjo3GSMfEfMZRwMQrkRqLC7cI+PxsVhskg0HwBXCiEYtG+O4rlw+sBH/rq5/i
      TKfGwsICyWSSSqXCs88+u99lCWzA8KlVGzRw+9IEXdDtD2hUmxQrBWqHZJukRqNBr9cjkUgQ
      DIq9jw8rhhtAVgK06+vUuhouRcHj95FPx1Axf+9/GHjw7M7Vq1fpdMR7zocV2yT4zSvLB3Ym
      +ImpFPnUw1e2EBJ8uHJsk2Cfxwns/ybQiYiPE2MJMYMreCimJPjO7ZuEIhEUTxRp0GJ9bZlo
      aox0IsIfDYkEP/9EnolUgJ/85CdkMhm2trZ44YUXxI6KAsDkCKBrKoN+i44WQO41abfaeIfw
      tT+3240sy2xublKtVun3+6IBBICpmWAJWXaAI0CjcBfZ5cXj8eAcwsuMZrOJpmn4/X6CweAn
      7swoODrYJsE/vbpsyUyw2S2JRmIBzs1khk7MhAQPR45tp2uPy4kVK4EY3ZIoEfFxcjxpvgDB
      ocZEA+gs3ppH9oQIBz30mjWc0VHkfptQKMgfv7q/EvzcE3km00HefPNNxsfHWVlZ4YUXXsBh
      wRLpgsODuadBW2263Q7X5uZwuxWaXZVms2VVbaZxu904HA4uX75Mt9sVE1qCj2HqEmh0bJJI
      JEQiFqLd61HbWCCRzVlVm2mazSaqqjIzM8Pa2tp+lyMYQmyT4Leu3qPe3r+Z4HQswLkPLUw1
      bGImJHg4cmyTYLfTQV+1YHVoAw3gUuSPfPkFgkdhuAHu3FlgPJfmzr0i0XAACZ1ioUBiJEc0
      5OePX7uybxIc9rt59nSOn//85wQCAVZXVzl//rx4f1fwMYyvC9RvcmNhHUmWWLt7C7XXxBNL
      0W4Ph2hKkkQoFKJcLtPtdmm3xarVgo9juAGiqRw+r5Ow18nI+DFwuGkVN4ZmzytN0yiXy/h8
      PgKBADaojuAQYJsE/+21e9Tb+/NOsEtx8BtPTnzkZ8MmZkKChyPHNgl2Kg5cTvNTwZomGWoA
      gWAnmGqAerlAGxf10jbj2ThLW23iUT/hYJA/2WcJ/vQvJdjv97O2tiYkWPBQTDXA5naBAQpK
      v878so7HrdBuOwgPwTu0DyS4WCwKCRY8EuMNoOt4PF76ukw0GaVSreP3B3AOyXP2H5bgft+8
      iwgOJ/ZJ8PUVGvs0E+xSHHzu3MRHfjZsYiYkeDhybJNgRZZQrNiXV9rZl+TpE6P4vcMx+ggO
      DqYaYGXpzv1VofUevnCC0uY9YiMTpGIh/vdfX91TCf4v/+o3WVlepFwu43K5mJ2dFdsSCT4R
      U6fodrtNr9cFdNTBgEajTrdr/rLHKNFolGq1SjabFVuSCnaEqQZIZkY5c2IWWZbRganpmV8u
      h7I/bG1tEQgEuH37NisrK/tWh+DgYJsE/+z6Co09nAl+9nSOwGMcYNjETEjwcOTYJsGyJCHL
      Vqy+8Oic2VycXCpkwTEERxVDDaBpPRbvrhN09mnjp9mskgyH6bs8uNCJx6L86Y/sl+B/8fJT
      uOgwNzdHMpmk1Wrxmc98xtZjCg4XxsZfXaNertKoVyjX+0xM5tha3aRRL1Oq7e3q0E6nk3w+
      T71ep1Qq7emxBQcfQyOAJDs5Np2nr+uENVhd2WbqxCwOj4NKZW8fOWg0GmxtbZHNZgmHH76g
      rUDwKGyT4GK1hWpBsqaqyI9YyiTode34rtOwiZmQ4OHIsU2CX7m0wHbV/BIpmqY/UoI/d25C
      vPsrMIXhBqhvrrFQ2CasBKjrPRLBAMVKnUg0QW4kyS/m12yX4OnRGNmQzFtvvUUoFKLX6/Hl
      L3/Z1mMKDheGx19dVUFW0FSNiakJiusbZCenUXt76wBOp5OZmRkURaHX279ZaMHBxPAI4AmH
      8TQ6JFMJNpbXOX7uSdaW75IYGbOyvk+k0WhQKBSEBAsMYZsEl2otrNg0XlXVR67nGfC68LqF
      BA/bZztIObZJ8A9/vsBWxbwE65qO9GsSPDMa46XPzJrOFggMN0BpfYXVUhGXN8HMWIz1zSKl
      aptkLEg6neZtGyW42xvwpfPjvP7663g8HlRV5bOf/axY+Vmwa4zvE6yqSA4XTgUkh5vC+hoe
      r4y2R9ukyrJMIpHA6XRSrVapVPZ/PzLBwcPwCBCMp4jlvNRLW9xb32Z0YgqvS0b2RKys75H0
      +33K5TInTpxAlmUhwAJD2CbB5XrbNgl2KQ5CfveucoZNzIQED0eObRL8l397yxoJ1vWPbGo3
      Mxrj5eeOm84VCMBEA6hqnc1NDUVusb6+ij8YpN3RGM3niYb8vHNz3RYJ7vZU/u6FCV5//XXc
      bjedTocvfvGLYhNsgSFMbZPa73fpdLtomoaiDfBHo5TLVeuqewQPBHh8fJxWq0WrNTzbMgkO
      FoZPm7LsR9a3CCUyJNMZPG4X95YWCcbsfzjtgQBHIhGy2Sx+v9/2YwoOJ7ZJcMUmCXY5HQR9
      uxNgGD4xExI8HDm2XTh//61bbFoiwRqSdP9L4nEpfOurnzKdKRA8wFQD1MrbXL1+m3QyQLnr
      xas3SOUmSURDvHPLegkOeF38y9+5wKVLl+7fai2XOXv2LCMjI5YeR3B0MDX+hqJxRkdzjOdH
      yKTTaKoFW8PvAJ/PRyKRYGFhgc3NzT05puBwYvISSCKRiCE7FWIhGb1p/2ysrutUq1U8Hg/f
      /OY3bT+e4HBjmwRXGx3LJViSIBr0GsoZNjETEjwcObZJ8Pd+Os9m2bqZYI9L4Xe/9rQFlQkE
      v8JUAyzemqfc6jOaSdDpdKmWi2TyUyRjYd69tWGpBAe8Tr711U9x6dIlut0uzWaT6elpZmZm
      LDuG4OhhavxVNRVZlqmWNtEkF6lknEajYVVtD8Xn83H69GlCoZDY+lRgGlMjQDQSwdGFTDLK
      YDCgVi4QjSasqu1j6LpOrVbD4XCg67q4/SkwjX0S3OxgRfIDCZYkiUjAYzhn2MRMSPBw5Ngm
      wX9xcZ7Nsvl1QnVdx+t28nt//xkLqhIIPoqpBlhevMVWuUUs7KXV6jF7+hTl7SKpVIL3blsn
      wX6Pk9/92tMfCHCv1yOfzzM7K16MF5jD1PirqRpOWcbpCzIS8dLqafRs3JLU5/Nx6tQpotEo
      ExMTth1HcHQwNQJEohFURw+fItEiiLe6RSxhjwQ/EGBJkqhUKlQqFVKplC3HEhwdbJPgWrOD
      jvkdYlRVRVEchP3GBRiGT8yEBA9Hjm0S/H9/csP0TPA/+82zxIMe8bqjwDZMfLN0Vu9cY63h
      xqc3cQbD+BUZ3ellNJNkbmHTtAR//TdOUSus0+/3WVxcJJ1Oc+HCBVOZAsGHMfVOcHokQyad
      od9ro+Fgc30Vt9fa1xNzuRyKopDNZllfX7c0WyAwdW0hu4LEww4SZ55kMOijjKRQ1YFVtQGw
      tLREqVQiGAzy/PPPW5otENgmwfVW17QEB7xOdE07MEK1G4QED0eObXb5f954n82SuZngf/5b
      54gHzd39EQgeh6kG0DWVubl3CMWyJD0KjnSS+ub9meDLFkjwP/j8aarbax9IcCaTERIssBTT
      428mm0dXu3S7PXTN+pngfD6P0+lkdHRUSLDAcsw1gCTTbtRIpdO0kGltbxFLJC0q7T5LS0sU
      i0UURRESLLAc2yS40e6CSQn2eYQE74Rh+2wHKcc2Cf7zH19nw8RM8IvnJ/nUiVEG2t4stSI4
      mhhugPV7i6hKgOW7t0nFwrgCUcqbq4yMHyMZC3PlzpYpCT49kaRcLnP16lUkSaJarfKVr3zF
      cJ5A8DCMj7+Kh0F9E8UTQtN1QCKTSVGr1y0rLhqNEonc33FmMLB2gk0gABMjQDQapefzkXA6
      adfKtFUJVdVIxK17RLlQKLC5ucn09DTRaNSyXIHgAbZJcLPdu7+SlUFcTgcuxXGghGo3CAke
      jhzbJPjP/uYaGwbfCX7x/BRPnxy1uCKB4OMYbwBd5/J775AcHaO0sYbiCyIPOgTiGTKJKFcX
      jUvwmYkU5XKZ69evE41GmZub4xvf+IbhUgWCR2FqBBgZSVOqlvCHk2iDFnj8JKMhSwp7IMC5
      XM6SywSB4GGYWxlO1Uilc/hcGtHkCPGQj1LN/FIocF+At7a2aDabYvlDgW3YJsGtTg+jM8Eu
      pwOncn9F6IMkVLtBSPBw5NgmwX/6o2tsGHwc+ksXhAQL9gbTM8FLi7cYG0nR0Z2EfG7Smfu7
      RF4zIcFPTAoJFuwNxkcAxUO/vonTF6avS7QbNYJe69YEEhIs2AtMzQT3/X5SioKs91l31PG4
      HKysbzOaMd8IDyQ4FosJCRbYhm0S3O72MSrBTkUWErwLhu2zHaQc2yT4T167YkiCv3RhimdO
      5WyoSCD4OKYaoLy9zrVbS2QzCVQ+KsHX724bkuAnptKUy2WuXbuGx+NBlmWeeuopM2UKBI/E
      1PgbjafI5UcBiVajZtmWRdFolGg0SrFY5Pbt22IrJIFtmLsEkmRSiQSy1mfNUcNrkQQ/EOCz
      Z8+yvb2NZOKpUoHgcdgmwZ1u39Dj0E7FgeL41cB0kIRqNwgJHo4c2yT4j169wkZpdztGzuYT
      /MMvnLapIoHg45hqgO31e5SaA4IBL6mwl+sLa+TyeaIhP+8v7V6CZVliMBjw2muvcerUKa5d
      u8bnP/95sTy6wDZMjb+d7oCJsRzoOv12E18oRLFYNlWQoijk83kURaHZbNq+77DgaGOqAUZz
      o6yvb+CUdWqaBy99UilzAtzr9dja2qLb7TIxMUE4HDaVJxA8DtskuNsb7FqCHbL0wQzwAw6S
      UO0GIcHDkWPbxfV3X5ljvbizmeDZfJx/9MUzdpUiEDwSUw2wfu8uzYGMUxogyU4qpW08wTgz
      U2O8v1TYsQQ/kN9XX32Vp59+mldffZWXXnqJQCBgpjyB4BMxNf52BzpjuSwOVHTZia7rhEJB
      Q1mKojA2Nobb7SYcDouFsAR7gqkRIDeaYXVjk2QqB2ikk2fwuN2GHl3o9/tsb2+jKArxeJxQ
      yJqX6wWCx2GbBPf6A5B2NsDIEh+T3wccJKHaDUKChyPHNgn+wx/OsVbc2T3842MJviEkWLAP
      mFgYS+Pye++iePyUi9tM51PIiWO0i+uM5Ue5sbxzCVYc8kck+JVXXuHll18WEiywHVPjrw44
      3V5y+TyJSJDF27dodo1tkfRhCY5EIkKCBXuCiUsgiVg0gi8Sw+dWcDhlzp0eQet3DaU9kGCn
      0ykkWLBn2CbB/f4AaYeCJ0nSRx6B/jAHSah2g5Dg4cixTYL/4AfvsbaDmWC3y8G//8cv2FWG
      QPBYTK0OfeOdt9DiE3gHNVxuH8Vq84PHoefvFXckwV6Xgq7rXLx4kZMnTzI3N0cmk+H0afFe
      gMB+jI+/kkR2JEsmk2Zrq4BDUvGFQhQMPA4tSRLT09Pouk44HOb48eOGyxIIdoOpSyBfPI3u
      lDl3/lOoAxWttE0gnd51jq7rrK2t4Xa7aTabFItF0gZyBILdYp8ED9QdC96jBBgOllDtBiHB
      w5FjOL1arRIK+qjVu3i9LlRNo1IsEE9ncTokvvP9d1nbwTvBbqfCf/gnQoIF+4PhBli6NU8i
      k6bY0uiUVsmN5CAUY+XePSYnxri5snsJPnHiBJcvXxYSLNgzDF8CddoNegMJpyLT6XQIeL3I
      bjf9bhe3202v39/hej4SDvmj/07X9Q/+r6ZpllwmDFvOg1+7FWseDdtnO0g5tjmArusH5pew
      HzmiAYYjx5YGEAgOCrbNBK8u3WGz2ubJv3Pa0CLpzVqZmzcX8YUD9Po6T5wyODega8xdehNf
      coJWtcjsmbN4FQMVaX2uXn2fRCrBxuoGo8dOkAz7DJV04+ocqsOF1usSjGeYyGV2ndFuVFnd
      ruBQOzT7Mg61idMf59hkflc5aq/DjTvLTIwkuL6wTDTgoaPKnD45u+u/29WrVzh16gyX3rzI
      yOQY21tVzj35BI5djnLbK/MMfOMU771PKplgZavA2MRJEhHPjjN0XePqtetMZqJcX1rH7wvT
      7XY5d+7MRya/bNt6RcVBNOjHzPCSnZjA43IT8LkMZzTKW9TbXcq1Fql4mL5qsCJtQKvTZW11
      lVQ6Ra9v7KlX+OWtT61PMJoCtWcowxsI4/e4kJ0e/B4FbyCCA3XXOQ6Xh1g4iC5JjI+N43R7
      CHichmpKJJLUC6s0eiqlaptkNISRZ3rjyQToKq1Wm7XlFTKjWbrd3f2eJEkmEY+j6hIul0Kv
      r5EI+T/2G7JtBMhmkmxX24Y7TNc1quUyI+kknYHx6+RALMOznw6j4qBYrBB0G6xI8TA9kcMV
      iFIvF8nEjT+tmkqnGcge9F6DYMzYZoCNaolavcVIOkZfV5AHLVyB6K5zBt0W9dr9lb3rzTaj
      mTidgWxg1NZo12vI8TTPP/csDofEZqHK7k9dOpvbDfpSn6mpCTyhONXiNtnR1O5StAGteg0l
      niISjJIdSVGsNPn11hYOIDjSiN3nBEcaseqs4NDRbDZZXV0FYGxsDI/n0fIsGkCw5+i9Gt/7
      q5/yzDPnKVfq5EbuX9/XSlv0NInL87d5+csvsnBrHrlX4hcrMCG1YGKGYL9OfjzP+naFwtoa
      J584zdvvXOKZJ8/yyo9/xtd+5ys0m03m5+cZGxv7xCV6RAMI9p5Bm0Aix8rN66i6yhsbFRLO
      Ab1+FwmJeMjHoHaP1UKN2sodzn7u6yj37uBL+fnpD37M1eUi8aCLjeuXSEydAuDtueskY79a
      SDmZTDI7O4vX631sKUKCBXuOruusLd/BG4qxuVUiE/NR7UhEQ/e/rMVikcnJSW7fvEF2dBTJ
      FUDqtJH9bpZv3SQQjtLo9ElFw2jooOvIapetWp+ZqTyNRoNer0csFvvEWkQDCI40/x8sd8+E
      s4bc6gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='which branch origin has the most fail task?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='which origin branch to destination branch has the minimal and maximum time to complete the task?' width='192'>
      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
      05xYkQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='which person has the most task fail and success to completed a task looked by the taskAssignTo column?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='which person has to shortest time to completed a task looked by the taskAssignTo column?' width='192'>
      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
      JB82/w9h3xn8CF26CQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='which receiver city has the most fail task?' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
